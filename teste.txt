from flask import Flask, render_template, request, Response, url_for
from weasyprint import HTML
from io import BytesIO

app = Flask(__name__)

pecados = {
    "1. Amar a Deus sobre todas as coisas": [
        "Neglig√™ncia na ora√ß√£o di√°ria",
        "D√∫vidas sobre a f√© e cr√≠ticas aos ensinamentos da Igreja",
        "Des√¢nimo espiritual e revolta contra Deus",
        "Frequentar cultos ou pr√°ticas supersticiosas (ex: cartomantes, hor√≥scopos)",
        "Buscar gl√≥ria pessoal acima da vontade de Deus",
        "Orgulho, vaidade ou apego a elogios",
        "Apego excessivo ao dinheiro e aos bens materiais"
    ],
    "2. N√£o tomar o nome de Deus em v√£o": [
        "Usar o nome de Deus ou dos santos de forma desrespeitosa",
        "Ridicularizar s√≠mbolos da f√© ou religiosos",
        "Fazer promessas sem inten√ß√£o de cumprir",
        "Juramentos falsos ou desnecess√°rios",
        "Permitir ou rir quando outros zombam da f√©"
    ],
    "3. Guardar domingos e festas de guarda": [
        "Faltar √† missa dominical ou em dias santos sem necessidade grave",
        "Chegar intencionalmente atrasado √† missa ou sair antes da b√™n√ß√£o final",
        "Comungar em pecado mortal",
        "Deixar de se confessar ao menos uma vez ao ano",
        "N√£o jejuar ou n√£o fazer abstin√™ncia quando mandado pela Igreja",
        "Negligenciar a ajuda material √† Igreja"
    ],
    "4. Honrar pai e m√£e": [
        "Desobedi√™ncia e falta de respeito aos pais ou superiores",
        "Neglig√™ncia nos cuidados com os pais idosos ou doentes",
        "Maltrato ao c√¥njuge em palavras ou atitudes",
        "Dar mau exemplo aos filhos",
        "Permitir influ√™ncia negativa sobre os filhos (TV, internet, amizades)",
        "Neglig√™ncia na forma√ß√£o religiosa dos filhos",
        "Deixar de corrigir os filhos por comodismo"
    ],
    "5. N√£o matar": [
        "√ìdio, rancor, inimizade ou desejo de vingan√ßa",
        "Falta de perd√£o",
        "Desejar a morte ou o mal a algu√©m (ou a si mesmo)",
        "Aborto, eutan√°sia ou apoio a essas pr√°ticas",
        "Descuido com a sa√∫de (excesso de comida, drogas, bebida, sedentarismo)",
        "Riscos desnecess√°rios √† vida (dire√ß√£o imprudente, v√≠cios)",
        "Dar esc√¢ndalo ou mau exemplo"
    ],
    "6. N√£o pecar contra a castidade": [
        "Pensamentos ou desejos impuros volunt√°rios",
        "Masturba√ß√£o, pornografia, sexo fora do casamento",
        "Infidelidade emocional ou f√≠sica",
        "Liberdades excessivas no namoro",
        "Usar roupas provocativas com inten√ß√£o",
        "Conversas ou piadas imorais",
        "Consumir conte√∫do sexualizado (TV, filmes, redes sociais)",
        "Amizades que me levam ao pecado"
    ],
    "7. N√£o roubar": [
        "Furto, desonestidade em contratos ou neg√≥cios",
        "Apropriar-se de bens ou dinheiro indevidamente",
        "N√£o pagar d√≠vidas justas ou sal√°rios devidos",
        "Desperdi√ßar o tempo no trabalho ou trabalhar com neglig√™ncia",
        "V√≠cio em jogos de azar",
        "Viver acima dos pr√≥prios meios"
    ],
    "8. N√£o levantar falso testemunho": [
        "Mentira habitual, mesmo sem prejudicar diretamente",
        "Cal√∫nia, difama√ß√£o ou exagerar defeitos dos outros",
        "Ouvir ou espalhar boatos",
        "Julgar mal ou condenar injustamente algu√©m",
        "Causar divis√£o entre pessoas por fofoca",
        "N√£o reparar a m√° reputa√ß√£o causada por mim"
    ],
    "9. N√£o desejar a mulher do pr√≥ximo": [
        "Desejos impuros por pessoa casada ou consagrada",
        "Fantasias ou inten√ß√µes de infidelidade",
        "Ass√©dio verbal ou f√≠sico",
        "Flertes com pessoas comprometidas",
        "Curiosidade indevida sobre a intimidade alheia"
    ],
    "10. N√£o cobi√ßar as coisas alheias": [
        "Invejar os bens, sucesso ou talentos dos outros",
        "Desejo de tomar ou imitar o que pertence a outro",
        "Descontentamento com a pr√≥pria vida por compara√ß√£o"
    ],
    "Mandamentos da Igreja": [
        "Faltar √† Missa em festas de guarda",
        "N√£o confessar-se ao menos uma vez por ano",
        "N√£o comungar na P√°scoa",
        "Comungar em pecado grave",
        "N√£o guardar jejum e abstin√™ncia nos tempos prescritos",
        "N√£o ajudar a Igreja materialmente"
    ],
    "Pecados relacionados ao casamento e √† fam√≠lia": [
        "Neglig√™ncia com o c√¥njuge (di√°logo, carinho, aten√ß√£o)",
        "Viol√™ncia f√≠sica ou verbal dentro do lar",
        "Desrespeito m√∫tuo entre os c√¥njuges",
        "Falta de perd√£o no matrim√¥nio",
        "Priorizar trabalho ou lazer em detrimento da fam√≠lia",
        "N√£o se abrir √† vida (rejeitar filhos sem justa causa)",
        "N√£o dar testemunho crist√£o dentro do lar"
    ],
    "Pecados espirituais e morais": [
        "Pregui√ßa espiritual (n√£o buscar crescer na f√©)",
        "Desinteresse pelas coisas de Deus",
        "Falta de zelo apost√≥lico (n√£o evangelizar, n√£o ajudar os outros na f√©)",
        "Conformismo com o pecado pr√≥prio ou alheio",
        "Buscar o sucesso pessoal acima da vontade divina"
    ]
}


@app.route("/", methods=["GET", "POST"])
def index():
    resultado = {}
    html_conteudo = ""
    if request.method == "POST":
        for mandamento, lista in pecados.items():
            indices = request.form.getlist(mandamento)
            selecionados = [lista[int(i)] for i in indices if i.isdigit() and int(i) < len(lista)]
            if selecionados:
                resultado[mandamento] = selecionados

        custom = request.form.get("custom", "").strip()
        if custom:
            resultado.setdefault("Outros pecados digitados", []).append(custom)

        html_conteudo = render_template("pdf_template.html", resultado=resultado)

    return render_template("index.html", pecados=pecados, resultado=resultado, html_conteudo=html_conteudo)

@app.route("/download", methods=["POST"])
def download():
    html_renderizado = request.form.get("html_conteudo", "")
    if not html_renderizado:
        return "Conte√∫do vazio para gerar PDF", 400

    pdf_io = BytesIO()
    html = HTML(string=html_renderizado, base_url=request.base_url)
    html.write_pdf(target=pdf_io)  # Correto para novas vers√µes
    pdf_io.seek(0)

    return Response(pdf_io.read(),
                    mimetype="application/pdf",
                    headers={"Content-Disposition": "attachment;filename=meus_pecados.pdf"})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
templates/index.html
<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Exame de Consci√™ncia</title>
  <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
  <style>
    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      textarea.form-control {
        width: 100% !important;
        font-size: 1rem;
      }

      .btn {
        width: 100%;
        font-size: 1rem;
      }
    }
  </style>
</head>
<body class="page-body">
  <div class="container my-5">
    <div class="icon">
      <img src="{{ url_for('static', filename='img/cristo_pantocrator.jpg') }}" alt="Cristo Pantocrator" />
    </div>
    <h1 class="title">üìú Exame de Consci√™ncia</h1>

    <form method="POST" id="form-pecados">
      {% for mandamento, lista in pecados.items() %}
      <div class="card mb-3 card-section">
        <div class="card-header fw-bold section-title">{{ mandamento }}</div>
        <div class="card-body">
          {% for pecado in lista %}
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="{{ mandamento }}" value="{{ loop.index0 }}" id="{{ mandamento }}-{{ loop.index0 }}" />
            <label class="form-check-label" for="{{ mandamento }}-{{ loop.index0 }}">{{ pecado }}</label>
          </div>
          {% endfor %}
        </div>
      </div>
      {% endfor %}

      <div class="mb-3">
        <label for="custom" class="form-label fw-bold">Outro(s) pecado(s) que deseja digitar:</label>
        <textarea class="form-control" id="custom" name="custom" rows="3" placeholder="Digite livremente..."></textarea>
      </div>

      <button type="submit" class="btn btn-primary">Gerar minha lista</button>

    </form>

    {% if resultado %}
    <hr class="my-5" />
    <h2 class="section-title">üìÑ Seus pecados selecionados:</h2>
    <form method="POST" action="/download" id="form-download">
      <input type="hidden" name="html_conteudo" id="html_conteudo" />

      <ul class="list-group my-3 list-peccados">
        {% for mandamento, lista in resultado.items() %}
        <li class="list-group-item list-header">{{ mandamento }}</li>
        {% for item in lista %}
        <li class="list-group-item list-item">{{ item }}</li>
        {% endfor %}
        {% endfor %}
      </ul>

      <button type="submit" class="btn btn-success">üìÖ Baixar lista como PDF</button>

    </form>
    {% endif %}
  </div>

<script>
  document.getElementById('form-download')?.addEventListener('submit', function(event) {
    event.preventDefault();

    let listaHTML = `<div class="icon">
      <img src="{{ url_for('static', filename='img/cristo_pantocrator.jpg') }}" alt="Cristo Pantocrator" />
    </div>
    <h1>Exame de Consci√™ncia</h1>`;

    {% for mandamento, lista in resultado.items() %}
      listaHTML += `<h2>{{ mandamento }}</h2><ul>`;
      {% for item in lista %}
        listaHTML += `<li>{{ item }}</li>`;
      {% endfor %}
      listaHTML += "</ul>";
    {% endfor %}

    const css = `
      body {
        font-family: Georgia, serif;
        padding: 40px;
        color: #333;
        background-color: #fffef8;
      }
      h1 {
        text-align: center;
        color: #6a4f28;
        margin-bottom: 30px;
      }
      h2 {
        color: #4a3820;
        margin-top: 30px;
      }
      ul {
        list-style-type: square;
        padding-left: 20px;
      }
      .icon {
        text-align: center;
        margin-bottom: 30px;
      }
      .icon img {
        width: 120px;
        border-radius: 10px;
        border: 3px solid #d4af37;
      }
    `;

    document.getElementById('html_conteudo').value = `
      <!DOCTYPE html>
      <html lang="pt-br">
      <head>
        <meta charset="UTF-8" />
        <style>${css}</style>
      </head>
      <body>
        ${listaHTML}
      </body>
      </html>
    `;

    this.submit();
  });
</script>
</body>
</html>
templates/pdf_template.html
<!DOCTYPE html>
<html lang="pt-br">
<head>
<meta charset="UTF-8" />
<style>
  body {
    font-family: "Georgia", serif;
    padding: 40px;
    color: #333;
    background-color: #fffef8;
  }
  h1 {
    text-align: center;
    color: #6a4f28;
    margin-bottom: 30px;
  }
  h2 {
    color: #4a3820;
    margin-top: 30px;
  }
  ul {
    list-style-type: square;
    padding-left: 20px;
  }
  .icon {
    text-align: center;
    margin-bottom: 30px;
  }
  .icon img {
    width: 120px;
    border-radius: 10px;
    border: 3px solid #d4af37;
  }
</style>
</head>
<body>
  <div class="icon">
    <img src="{{ url_for('static', filename='img/cristo_pantocrator.jpg') }}" alt="Cristo Pantocrator" />
  </div>

  <h1>Exame de Consci√™ncia</h1>

  {% for mandamento, lista in resultado.items() %}
  <div class="section">
    <h2>{{ mandamento }}</h2>
    <ul>
      {% for item in lista %}
      <li>{{ item }}</li>
      {% endfor %}
    </ul>
  </div>
  {% endfor %}
</body>
</html>
static/css/style.css
body.page-body {
  font-family: Georgia, serif;
  padding: 40px;
  color: #333;
  background-color: #fffef8;
}

h1.title {
  text-align: center;
  color: #6a4f28;
  margin-bottom: 30px;
}

.section-title {
  color: #4a3820;
  margin-bottom: 15px;
}

.card-section {
  border-radius: 10px;
  border: 3px solid #d4af37;
  background-color: #fffef8;
  padding: 10px;
  margin-bottom: 20px;
}

.list-peccados {
  list-style-type: square;
  padding-left: 20px;
}

.list-header {
  background-color: #6a4f28;
  color: white;
  font-weight: bold;
  padding: 10px;
  margin-top: 20px;
}

.list-item {
  border: none;
  color: #333;
  padding-left: 20px;
}

.icon {
  text-align: center;
  margin-bottom: 30px;
}

.icon img {
  width: 120px;
  border-radius: 10px;
  border: 3px solid #d4af37;
}

/* Bot√µes */
button.btn {
  padding: 10px 20px;
  background-color: #d4af37;
  border: none;
  border-radius: 6px;
  color: #4a3820;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button.btn:hover {
  background-color: #b38c1a;
  color: white;
}

/* Textarea */
textarea.form-control {
  border: 2px solid #d4af37;
  border-radius: 6px;
  padding: 10px;
  font-family: Georgia, serif;
  color: #4a3820;
  resize: vertical;
}
